version: 2
jobs:
  test-python37:
    docker:
      - image: cimg/python:3.7

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Save Python Version
          command: |
            python --version > pythonversion

      - restore_cache:
          keys:
            - v2-python-{{ checksum "pythonversion" }}-dependencies-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}

      - run:
          name: Install Dependencies
          command: |
            python -m virtualenv ~/venv
            . ~/venv/bin/activate
            pip install -e .
            pip install -r requirements.txt
            mkdir -p test-reports

      - save_cache:
          paths:
            - ~/venv
          key: v2-python-{{ checksum "pythonversion" }}-dependencies-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}

      - run:
          name: Run Tests
          command: |
            . ~/venv/bin/activate
            pytest --verbose --junit-xml=test-reports/pytest-python37.xml

      - run:
          name: Run Linter
          command: |
            . ~/venv/bin/activate
            flake8

      - store_artifacts:
          path: test-reports

      - store_test_results:
          path: test-reports

  publish:
    docker:
      - image: cimg/python:3.7
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            python -m virtualenv ~/venv
            . ~/venv/bin/activate
            pip install twine

      - run:
          name: Publish to PyPI
          command: |
            . ~/venv/bin/activate
            ./publish_to_pypi.sh

workflows:
  version: 2
  test-and-publish:
    jobs:
      - test-python37:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - test-python37
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*.*/
            branches:
              ignore: /.*/
          context: blueque-publisher
